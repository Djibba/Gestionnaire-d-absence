/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frame;

import BDD.MyConnexion;
import BDD.Requete;
import Operation.Authentification;
import Test.md5;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import javax.swing.JOptionPane;


/**
 *
 * @author saliou
 */
public class InterfaceConnexion extends javax.swing.JFrame {
    //instanciation des classes importés
    Requete req = new Requete();
    md5 hacher = new md5();
    Authentification auth = new Authentification();
     MyConnexion mc = MyConnexion.getInstance();
    /**
     * Creates new form InterfaceConnexion
     */
    public InterfaceConnexion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel_identifiant = new javax.swing.JLabel();
        jTextField_identifiant = new javax.swing.JTextField();
        jLabel_motdepasse = new javax.swing.JLabel();
        jButton_connexion = new javax.swing.JButton();
        jPasswordField_password = new javax.swing.JPasswordField();
        jLabel_icon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Authentification");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(0, 51, 204));

        jLabel_identifiant.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel_identifiant.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_identifiant.setText("IDENTIFIANT");

        jTextField_identifiant.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField_identifiant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_identifiantActionPerformed(evt);
            }
        });
        jTextField_identifiant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_identifiantKeyPressed(evt);
            }
        });

        jLabel_motdepasse.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel_motdepasse.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_motdepasse.setText("MOT DE PASSE");

        jButton_connexion.setBackground(new java.awt.Color(255, 255, 255));
        jButton_connexion.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton_connexion.setText("CONNEXION");
        jButton_connexion.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jButton_connexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_connexionActionPerformed(evt);
            }
        });

        jPasswordField_password.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPasswordField_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField_passwordActionPerformed(evt);
            }
        });
        jPasswordField_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField_passwordKeyPressed(evt);
            }
        });

        jLabel_icon.setBackground(new java.awt.Color(255, 255, 255));
        jLabel_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/icon.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPasswordField_password, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_motdepasse, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_identifiant, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_identifiant, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel_icon)
                        .addGap(147, 147, 147))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton_connexion, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(186, 186, 186))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel_icon)
                .addGap(29, 29, 29)
                .addComponent(jLabel_identifiant, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField_identifiant, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel_motdepasse, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPasswordField_password, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton_connexion, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_identifiantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_identifiantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_identifiantActionPerformed

    private void jPasswordField_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField_passwordActionPerformed

    private void jButton_connexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_connexionActionPerformed
        // TODO add your handling code here:
          
           if (jTextField_identifiant.getText().equals("") || jPasswordField_password.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Aucun Champ ne doit être vide");
        }else{
              Interface_Enseignant intEns = new Interface_Enseignant();
          Interface_Responsable_classe intResClas = new Interface_Responsable_classe();
          Acceuil_surveillant AccueilSurveillant = new Acceuil_surveillant();
          String login = jTextField_identifiant.getText();
          String password = (new String(jPasswordField_password.getPassword()));
          String pwd =hacher.hachPassword(password);
          String profil="";
          try {
            String requete = "SELECT profil from user WHERE login='"+login+"' AND pwd='"+pwd+"'";
              ResultSet result = req.exeRead(requete);
              while(result.next()){
                  profil = result.getString("profil");
              }
              if(profil.equals("")){
                  JOptionPane.showMessageDialog(null, "login ou mot de passe incorrect");
              }
              else if(profil.equals("Enseignant")){
                  String nom_enseignant="";
                  String prenom_enseignant="";
                  String module="";
                  System.err.println(login);
                  try {
                      String requete1="SELECT nom_enseignant,prenom_enseignant,module FROM enseignant inner join user on enseignant.id_enseignant=user.id_enseignant WHERE login='"+login+"'";
                      ResultSet res = req.exeRead(requete1);
                      while(res.next()){
                          nom_enseignant = res.getString("nom_enseignant");
                          prenom_enseignant = res.getString("prenom_enseignant");
                          module = res.getString("module");
                      }
                  } catch (Exception e) {
                  }
                  this.setVisible(false);
                  intEns.setVisible(true);
                  intEns.AfficherNomProf(nom_enseignant, prenom_enseignant,module);
                  
              }
              else if(profil.equals("Etudiant")){
                  String nom_etudiant="";
                  String prenom_etudiant="";
                  String classe="";
                  System.err.println(login);
                  try {
                      String requete1="SELECT nom_etudiant,prenom_etudiant,classe FROM etudiant inner join user on etudiant.id_etudiant=user.id_etudiant WHERE login='"+login+"'";
                      ResultSet res = req.exeRead(requete1);
                      while(res.next()){
                          nom_etudiant = res.getString("nom_etudiant");
                          prenom_etudiant = res.getString("prenom_etudiant");
                          classe = res.getString("classe");
                      }
                  } catch (Exception e) {
                  }
                  this.setVisible(false);
                  intResClas.setVisible(true);
                  intResClas.AfficherNomProf(nom_etudiant, prenom_etudiant, classe);
              }
              else{
                  this.setVisible(false);
                  AccueilSurveillant.setVisible(true);
              }
        } catch (Exception e) {
        } 
           }
        
          
    }//GEN-LAST:event_jButton_connexionActionPerformed

    private void jPasswordField_passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField_passwordKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
             Interface_Enseignant intEns = new Interface_Enseignant();
          Interface_Responsable_classe intResClas = new Interface_Responsable_classe();
          Acceuil_surveillant AccueilSurveillant = new Acceuil_surveillant();
          String login = jTextField_identifiant.getText();
          String password = (new String(jPasswordField_password.getPassword()));
          String pwd =hacher.hachPassword(password);
          String profil="";
          try {
            String requete = "SELECT profil from user WHERE login='"+login+"' AND pwd='"+pwd+"'";
              ResultSet result = req.exeRead(requete);
              while(result.next()){
                  profil = result.getString("profil");
              }
              if(profil.equals("")){
                  JOptionPane.showMessageDialog(null, "login ou mot de passe incorrect");
              }
              else if(profil.equals("Enseignant")){
                  String nom_enseignant="";
                  String prenom_enseignant="";
                  String module="";
                  System.err.println(login);
                  try {
                      String requete1="SELECT nom_enseignant,prenom_enseignant,module FROM enseignant inner join user on enseignant.id_enseignant=user.id_enseignant WHERE login='"+login+"'";
                      ResultSet res = req.exeRead(requete1);
                      while(res.next()){
                          nom_enseignant = res.getString("nom_enseignant");
                          prenom_enseignant = res.getString("prenom_enseignant");
                          module = res.getString("module");
                      }
                  } catch (Exception e) {
                  }
                  this.setVisible(false);
                  intEns.setVisible(true);
                  intEns.AfficherNomProf(nom_enseignant, prenom_enseignant,module);
                  
              }
              else if(profil.equals("Etudiant")){
                  String nom_etudiant="";
                  String prenom_etudiant="";
                  String classe="";
                  System.err.println(login);
                  try {
                      String requete1="SELECT nom_etudiant,prenom_etudiant,classe FROM etudiant inner join user on etudiant.id_etudiant=user.id_etudiant WHERE login='"+login+"'";
                      ResultSet res = req.exeRead(requete1);
                      while(res.next()){
                          nom_etudiant = res.getString("nom_etudiant");
                          prenom_etudiant = res.getString("prenom_etudiant");
                          classe = res.getString("classe");
                      }
                  } catch (Exception e) {
                  }
                  this.setVisible(false);
                  intResClas.setVisible(true);
                  intResClas.AfficherNomProf(nom_etudiant, prenom_etudiant, classe);
              }
              else{
                  this.setVisible(false);
                  AccueilSurveillant.setVisible(true);
              }
        } catch (Exception e) {
        }
        }      
        
    }//GEN-LAST:event_jPasswordField_passwordKeyPressed

    private void jTextField_identifiantKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_identifiantKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
         Interface_Enseignant intEns = new Interface_Enseignant();
          Interface_Responsable_classe intResClas = new Interface_Responsable_classe();
          Acceuil_surveillant AccueilSurveillant = new Acceuil_surveillant();
          String login = jTextField_identifiant.getText();
          String password = (new String(jPasswordField_password.getPassword()));
          String pwd =hacher.hachPassword(password);
          String profil="";
          try {
            String requete = "SELECT profil from user WHERE login='"+login+"' AND pwd='"+pwd+"'";
              ResultSet result = req.exeRead(requete);
              while(result.next()){
                  profil = result.getString("profil");
              }
              if(profil.equals("")){
                  JOptionPane.showMessageDialog(null, "login ou mot de passe incorrect");
              }
              else if(profil.equals("Enseignant")){
                  String nom_enseignant="";
                  String prenom_enseignant="";
                  String module="";
                  System.err.println(login);
                  try {
                      String requete1="SELECT nom_enseignant,prenom_enseignant,module FROM enseignant inner join user on enseignant.id_enseignant=user.id_enseignant WHERE login='"+login+"'";
                      ResultSet res = req.exeRead(requete1);
                      while(res.next()){
                          nom_enseignant = res.getString("nom_enseignant");
                          prenom_enseignant = res.getString("prenom_enseignant");
                          module = res.getString("module");
                      }
                  } catch (Exception e) {
                  }
                  this.setVisible(false);
                  intEns.setVisible(true);
                  intEns.AfficherNomProf(nom_enseignant, prenom_enseignant,module);
                  
              }
              else if(profil.equals("Etudiant")){
                  String nom_etudiant="";
                  String prenom_etudiant="";
                  String classe="";
                  System.err.println(login);
                  try {
                      String requete1="SELECT nom_etudiant,prenom_etudiant,classe FROM etudiant inner join user on etudiant.id_etudiant=user.id_etudiant WHERE login='"+login+"'";
                      ResultSet res = req.exeRead(requete1);
                      while(res.next()){
                          nom_etudiant = res.getString("nom_etudiant");
                          prenom_etudiant = res.getString("prenom_etudiant");
                          classe = res.getString("classe");
                      }
                  } catch (Exception e) {
                  }
                  this.setVisible(false);
                  intResClas.setVisible(true);
                  intResClas.AfficherNomProf(nom_etudiant, prenom_etudiant, classe);
              }
              else{
                  this.setVisible(false);
                  AccueilSurveillant.setVisible(true);
              }
        } catch (Exception e) {
        }
        }
    }//GEN-LAST:event_jTextField_identifiantKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceConnexion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_connexion;
    private javax.swing.JLabel jLabel_icon;
    private javax.swing.JLabel jLabel_identifiant;
    private javax.swing.JLabel jLabel_motdepasse;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField_password;
    private javax.swing.JTextField jTextField_identifiant;
    // End of variables declaration//GEN-END:variables
}
